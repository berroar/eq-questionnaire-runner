name: PR

on:
  push:
    branches:
      - "introduce-new-routing-rules-engine-copy"

jobs:
  python-dependencies:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install apt dependencies
        run: sudo apt-get install libsnappy-dev libgconf-2-4
      - name: Install Pipenv
        run: pip install pipenv==2018.11.26
      - name: Cache virtualenv
        id: cache-virtualenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs/
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-virtualenvs-${{ hashFiles('Pipfile.lock') }}
      - name: Install virtual environment
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: pipenv install --dev
  test-unit:
    needs: python-dependencies
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo "PYTHON_VERSION=$(cat .python-version)" >> $GITHUB_ENV
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install apt dependencies
        run: sudo apt-get install libsnappy-dev libgconf-2-4 jq
      - name: Write app version
        run: printf "${{ github.event.pull_request.head.sha }}" > .application-version
      - name: Install pipenv
        run: pip install pipenv==2018.11.26
      - name: Cache virtualenv
        id: cache-virtualenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs/
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-virtualenvs-${{ hashFiles('Pipfile.lock') }}
      - name: Install virtual environment
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        run: pipenv install --dev
      - name: Link env vars
        run: ln -sf .development.env .env
      - name: Running unit tests
        run: pipenv run pytest -v -s tests/app/questionnaire/routing/test_when_rule_evaluator.py
